% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/top_comp.R
\name{topComp}
\alias{topComp}
\title{Compares toponyms of a polygon and countries}
\usage{
topComp(countries, len, rat, polygon, ...)
}
\arguments{
\item{countries}{character string with country reference (name or iso-code).}

\item{len}{numeric. The character length of the toponyms.}

\item{rat}{numeric. The ratio (a number between 0.0 and 1) of how many occurrences of one toponym need to be in the polygon.}

\item{polygon}{data frame. Polygon for comparison with the country.}

\item{...}{Additional parameters:
\itemize{
\item\code{type} character string. Either by default "$" (ending) or "^" (beginning).
\item\code{feat.class} character string. Selects data only of those feature classes (check \url{http://download.geonames.org/export/dump/readme.txt} for the list of all feature classes). By default, it is \code{P}.
\item\code{freq.type} character string. If "abs" (the default), ratios of absolute frequencies inside the polygon and in the countries as a whole are computed. If "rel", ratios of relative frequencies inside the polygon and outside the polygon will be computed.
\item\code{limit} numeric. The number of the most frequent toponyms which will be tested.
}}
}
\value{
A data frame printed out and saved in the global environment. It shows toponyms surpassing the ratio, the ratio and the frequency.
}
\description{
This function retrieves the most frequent toponyms in a given polygon relative to the countries' frequency
}
\details{
This function sorts the toponyms in the given countries by frequency. It then tests which lie in the given polygon and prints out a data frame with those frequent toponyms that match the ratio criteria.
Parameter \code{countries} accepts all references found in \code{country(query = "country table")}.
Polygons passed through the \code{polygon} parameter need to intersect a country of \code{countries}.
}
\examples{
\dontrun{
topComp("GB",
  count = 100, len = 4, rat = .9,
  polygon = toponym::danelaw_polygon
)
## prints and saves a data frame of the top 100 four-character-long endings in Great Britain
## if more than 90\% of the places lie in the newly defined polygon
## which frames the Danelaw.


topComp("GB",
  len = 3, rat = 1,
  polygon = toponym::danelaw_polygon,
  freq.type = "rel"
)
## prints and saves a data frame of all three-character-long endings in Great Britain
## if they have greater relative frequencies within Danelaw than outside of Danelaw.


topComp(c("BE", "NL"),
  rat = .8,
  polygon = toponym::flanders_polygon
)

## prints and saves a data frame of the top 10 three-character-long endings in Belgium
## and Netherlands viewed as a unit if more than 80\% of the places lie
## in the newly defined polygon which frames Flanders.

.
}

}
