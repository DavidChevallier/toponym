% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/top.R
\name{top}
\alias{top}
\title{Generates a map with all locations matching the regular expression}
\usage{
top(
  strings,
  countries,
  color = rainbow(length(strings)),
  regions = FALSE,
  df = TRUE,
  csv = FALSE,
  plot = TRUE,
  ratio_string = "",
  fq = "",
  feat.class = "P"
)
}
\arguments{
\item{strings}{Character strings in form of regular expression that filter the data frames. The first string is shown on the plot.}

\item{countries}{Character string with country code abbreviations (check \url{https://www.geonames.org/countries/} for a list of available countries) specifying, the toponyms of which countries are checked.}

\item{color}{character string indicating, which color is assigned to each string.}

\item{regions}{logical. If \code{TRUE} domestic state boundaries are displayed}

\item{df}{logical. If \code{TRUE} then the filtered data frame will be saved in the global environment.}

\item{csv}{logical. If \code{TRUE} then the filtered data frame will be saved as .csv in the current working directory.}

\item{plot}{logical. If \code{FALSE} then the plot will not be printed but saved as .png in the current working directory.}

\item{ratio_string}{character string. Ratio of occurrences in the polygon from \code{top.candidates()}. This should not be specified manually.}

\item{fq}{character string. Number of occurrences in the designated polygon and in total returned by \code{top.candidates()}. This should not be specified manually.}

\item{feat.class}{character string with feature classes (check \url{http://download.geonames.org/export/dump/readme.txt} for the list and names of all feature classes in the data). By default, it is \code{p}.}
}
\value{
A plot in the current R session or as .png in the working directory. If directly generated by this function \code{top()}, it displays the first string and the total occurrences. If generated by \code{candidates.maps()}, it displays the string, the ratio as a percentage and the number of occurrences in the designated polygon and in total.
}
\description{
The function calls the \code{simple.map()} function to generate a map plotting all locations, filtered by \code{get.coordinates()}. The plot also displays additional information if used by \code{candidates.maps()}. The data used is downloaded by \code{get.data()} and is accessible on the \href{https://download.geonames.org/export/dump/}{GeoNames download server}.
}
\examples{
\dontrun{
get.data("DE", save = TRUE)
# saves data for DE in package directory
top("itz$")
# generates and prints a map with all populated places
# in Germany (default country) ending with "itz"
# and saves the locations in a data frame in the global environment.


top("^By", "DK", color = "green", df = FALSE, csv = TRUE, plot = TRUE)
# first downloads data for DK and extracts it to the temporary directory
# generates plot with all populated places colored in green
# in Denmark starting with "By" (case sensitive)
# and saves it as .png together with the location data as .csv in the working directory.


get.data(c("DE", "PL"), save = TRUE)
# saves for DE and PL in package directory if it's not already there
top(c("itz$", "ice$"), c("DE", "PL"))
# generates plot with all populated places in Germany colored in red and Poland colored in cyan
# ending with either "itz" or "ice"
# and saves the locations in a data frame in the global environment.
}
}
